// ==================================================================
// CALEA: scripts/setup-uploads.js
// DESCRIERE: Script pentru crearea automată a directoarelor de upload
// ==================================================================

const fs = require('fs');
const path = require('path');

console.log('🚀 Setting up UNITAR PROIECT directories...');

// Directoarele necesare
const directories = [
  'uploads',
  'uploads/facturi',
  'uploads/contracte',
  'uploads/temp'
];

// Creează directoarele
directories.forEach(dir => {
  const fullPath = path.join(process.cwd(), dir);
  
  try {
    if (!fs.existsSync(fullPath)) {
      fs.mkdirSync(fullPath, { recursive: true });
      console.log(`✅ Created directory: ${dir}`);
    } else {
      console.log(`📁 Directory exists: ${dir}`);
    }
  } catch (error) {
    console.error(`❌ Error creating directory ${dir}:`, error.message);
  }
});

// Creează .gitkeep pentru a menține directoarele în git
const gitkeepDirs = ['uploads/facturi', 'uploads/contracte', 'uploads/temp'];

gitkeepDirs.forEach(dir => {
  const gitkeepPath = path.join(process.cwd(), dir, '.gitkeep');
  
  try {
    if (!fs.existsSync(gitkeepPath)) {
      fs.writeFileSync(gitkeepPath, '# Keep this directory in git\n# Generated by UNITAR PROIECT setup\n');
      console.log(`✅ Created .gitkeep: ${dir}`);
    }
  } catch (error) {
    console.error(`❌ Error creating .gitkeep in ${dir}:`, error.message);
  }
});

// Verifică că Puppeteer poate rula
try {
  const puppeteer = require('puppeteer');
  console.log(`✅ Puppeteer version: ${puppeteer._launcher.product} ready`);
} catch (error) {
  console.log('⚠️  Puppeteer not loaded yet (will be available after install)');
}

console.log('\n🎉 UNITAR PROIECT setup complete!');
console.log('📄 Ready to generate PDF invoices with hybrid system');
console.log('🔗 ANAF integration available for company data');
